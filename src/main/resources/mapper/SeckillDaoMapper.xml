<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yuan.dao.SeckillDao">
    <!-- mapper的存在目的就是为DAO接口方法提供sql语句配置，可以看做为DAO的实现类 -->

    <!-- 多个参数的话，parameterType就不用给了 -->
    <update id="reduceNumber">
        UPDATE seckill SET number=number-1
        WHERE seckill_id = #{seckillId} AND start_time <![CDATA[ <= ]]> #{killTime}
        AND end_time >= #{killTime} AND number > 0
    </update>

    <!-- 因为在mybatis-config.xml中配置了<setting name="useColumnLabel" value="true"/>，
     所以在这里不用写成select x as xx from tab，正常写就可以把查到的数据映射到实体属性中 -->
    <select id="queryById" resultType="Seckill" parameterType="long">
        SELECT seckill_id,name,number,start_time,end_time,create_time FROM seckill
        WHERE seckill_id = #{seckillId}
    </select>

    <!-- 同理：多个参数的话，parameterType就不用给了 -->
    <select id="queryAll" resultType="Seckill">
        SELECT seckill_id,name,number,start_time,end_time,create_time FROM seckill
        ORDER BY create_time DESC
        limit #{offset},#{limit}
    </select>

    <!-- mybatis调用存储过程 -->
    <select id="killByProcedure" statementType="CALLABLE">
        call execute_seckillPro(
          #{seckillId,jdbcType=BIGINT,mode=IN},
          #{phone,jdbcType=BIGINT,mode=IN},
          #{killTime,jdbcType=TIMESTAMP,mode=IN},
          #{rs,jdbcType=INTEGER,mode=OUT}
        )
    </select>

</mapper>